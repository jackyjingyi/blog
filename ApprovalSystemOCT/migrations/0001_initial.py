# Generated by Django 3.2.6 on 2021-11-24 15:26

import ApprovalSystemOCT.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('attachment_uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('attachment_app_name', models.CharField(max_length=255)),
                ('attachment_app_model', models.CharField(max_length=255)),
                ('attachment_identify', models.CharField(default='', help_text='APPs model primary key for attachment', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_name', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=255)),
                ('publish_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'permissions': (('can_publish_book', '发布图书'), ('can_repeal', '撤销发布')),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('process_order_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='create an uuid for each order', primary_key=True, serialize=False)),
                ('creat_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('1', '进行中'), ('2', '未开始'), ('3', '已结束'), ('4', '撤销'), ('5', '暂停'), ('6', '删除'), ('7', '立项'), ('8', '合并')], default='1', max_length=5)),
                ('prev', models.JSONField(default=dict, verbose_name='前序')),
                ('next', models.JSONField(default=dict, verbose_name='后继')),
                ('conjunction', models.JSONField(default=dict, verbose_name='关联')),
                ('read_only', models.CharField(default='0', max_length=5)),
                ('process_co_worker', models.ManyToManyField(related_name='process_co_worker', to=settings.AUTH_USER_MODEL)),
                ('process_executor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('process_owner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectDirection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='研究方向')),
                ('description', models.TextField(verbose_name='描述')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_name', models.CharField(max_length=255, verbose_name='任务名称')),
                ('task_type', models.CharField(max_length=255, verbose_name='任务类型')),
                ('task_init_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('task_update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('task_start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='任务开始时间')),
                ('task_duration', models.DurationField(help_text='流程持续天数', null=True, verbose_name='持续时长')),
                ('task_end_time', models.DateTimeField(blank=True, null=True, verbose_name='任务结束时间')),
                ('status', models.CharField(choices=[('1', 'processing'), ('2', 'not start'), ('3', 'finished'), ('4', 'abort'), ('5', 'pending')], default='1', max_length=5)),
                ('task_creator', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('task_executor', models.ManyToManyField(related_name='task_executors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='create an uuid for each Task', primary_key=True, serialize=False)),
                ('task_type', models.CharField(max_length=255, verbose_name='动作类型')),
                ('task_seq', models.IntegerField(default=0, verbose_name='动作顺序')),
                ('task_status', models.CharField(max_length=255, verbose_name='执行状态')),
                ('task_state', models.CharField(max_length=255, verbose_name='动作状态')),
                ('task_creat_time', models.DateTimeField(auto_now_add=True)),
                ('task_update_time', models.DateTimeField(auto_now=True)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApprovalSystemOCT.process')),
                ('task_co_worker', models.ManyToManyField(related_name='co_worker', to=settings.AUTH_USER_MODEL)),
                ('task_sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('step_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='create an uuid for each STEP', primary_key=True, serialize=False)),
                ('step_seq', models.IntegerField(default=0, verbose_name='步骤顺序')),
                ('step_condition_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='前置要求')),
                ('step_condition', models.JSONField(blank=True, null=True, verbose_name='前置要求')),
                ('step_owner', models.CharField(max_length=255, verbose_name='执行人')),
                ('step_assigner', models.CharField(blank=True, max_length=255, null=True, verbose_name='转发发出人')),
                ('step_assignee', models.CharField(blank=True, max_length=255, null=True, verbose_name='转出给')),
                ('step_create_time', models.DateTimeField(auto_now_add=True)),
                ('step_update_time', models.DateTimeField(auto_now=True)),
                ('step_start_time', models.DateTimeField(blank=True, null=True)),
                ('step_duration', models.DurationField(default=datetime.timedelta(0))),
                ('step_end_time', models.DateTimeField(blank=True, null=True)),
                ('step_status', models.CharField(max_length=255, verbose_name='执行状态')),
                ('step_state', models.CharField(max_length=255, verbose_name='步骤状态')),
                ('step_type', models.CharField(max_length=255, verbose_name='步骤类型')),
                ('step_attachment_snapshot', models.JSONField(blank=True, default=ApprovalSystemOCT.models.snapshot_default)),
                ('comments', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('step_attachment', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='ApprovalSystemOCT.attachment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApprovalSystemOCT.task')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255, verbose_name='研究项目')),
                ('project_type', models.CharField(choices=[('0', '未选择'), ('1', '前瞻战略研究'), ('2', '产品标准化研究'), ('3', '产品创新研究')], default='0', help_text='0.未选择,1.创新前瞻性研究；2.产品标准化研究，3.产品创新研究', max_length=25, verbose_name='课题类型')),
                ('project_department', models.CharField(default='', max_length=255, verbose_name='需求单位')),
                ('project_department_sponsor', models.CharField(default='', max_length=25, verbose_name='需求单位联系人')),
                ('project_department_phone', models.CharField(default='', max_length=50, verbose_name='联系电话')),
                ('project_co_group', models.TextField(default='', verbose_name='联合工作小组成员及分工')),
                ('project_research_funding', models.CharField(default='', max_length=255, verbose_name='研究经费')),
                ('project_outsourcing_funding', models.CharField(default='', max_length=255, verbose_name='外协预算')),
                ('project_start_time', models.DateTimeField(null=True, verbose_name='研究实施计划时间（起）')),
                ('project_end_time', models.DateTimeField(null=True, verbose_name='研究实施计划时间（止）')),
                ('project_detail', models.TextField(default='', verbose_name='具体分项任务内容及安排')),
                ('project_purpose', models.TextField(default='', verbose_name='主要创新研究课题内容、目标及意义')),
                ('project_preparation', models.TextField(default='', verbose_name='与课题相关的前期工作情况，现有基础条件')),
                ('project_difficult', models.TextField(default='', verbose_name='研究课题的重点及难点')),
                ('project_approval_time', models.DateTimeField(blank=True, null=True, verbose_name='立项时间')),
                ('project_head_master', models.CharField(blank=True, max_length=255, null=True, verbose_name='分管院长')),
                ('project_sponsor', models.CharField(blank=True, max_length=255, null=True, verbose_name='负责人')),
                ('project_outsourcing_companies', models.JSONField(blank=True, null=True, verbose_name='外部合作单位')),
                ('project_outsourcing_info', models.JSONField(blank=True, null=True, verbose_name='外部合作内容')),
                ('project_research_direction', models.ManyToManyField(to='ApprovalSystemOCT.ProjectDirection')),
            ],
            options={
                'permissions': (('patch_requirement', 'can patch requirement'),),
            },
        ),
        migrations.CreateModel(
            name='ProjectImplementTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor', models.CharField(blank=True, max_length=50, null=True, verbose_name='负责人')),
                ('department', models.CharField(max_length=255, verbose_name='责任单位/部门')),
                ('progress_year', models.CharField(max_length=20, verbose_name='编报年')),
                ('progress_season', models.CharField(max_length=20, verbose_name='编报季度')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('project_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApprovalSystemOCT.projectrequirement')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectImplement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_important_issue', models.CharField(max_length=500, verbose_name='重点工作事项')),
                ('project_important_issue_number', models.IntegerField(default=0, verbose_name='重点工作事项编号')),
                ('project_task', models.CharField(max_length=255, verbose_name='分项任务')),
                ('project_task_seq', models.IntegerField(default=0, verbose_name='分项任务编号')),
                ('project_task_start_time', models.DateTimeField(blank=True, null=True, verbose_name='分项任务开展时间')),
                ('project_task_end_time', models.DateTimeField(blank=True, null=True, verbose_name='分项任务完成时间')),
                ('season_implement_progress', models.TextField(blank=True, null=True, verbose_name='本季度工作推进情况')),
                ('season_implement_delay_explanation', models.TextField(default='无', null=True, verbose_name='未能按计划进度完成的原因')),
                ('add_ups', models.TextField(blank=True, null=True, verbose_name='相关说明')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('project_base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ApprovalSystemOCT.projectimplementtitle')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_name', models.CharField(max_length=255, verbose_name='流程名称')),
                ('process_type', models.CharField(choices=[('0', '未选择'), ('1', '课题录入'), ('2', '课题修改'), ('3', '进度录入'), ('4', '成果录入'), ('5', '结题'), ('6', '资料上传'), ('7', '立项')], max_length=255, verbose_name='流程类型')),
                ('process_init_time', models.DateTimeField(auto_now_add=True)),
                ('process_update_time', models.DateTimeField(auto_now=True)),
                ('process_start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('process_duration', models.DurationField(help_text='流程持续天数', null=True, verbose_name='持续时长')),
                ('process_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('1', 'processing'), ('2', 'not start'), ('3', 'finished'), ('4', 'abort'), ('5', 'pending')], default='1', max_length=5)),
                ('process_creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('process_executor', models.ManyToManyField(related_name='executors', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='process',
            name='process_pattern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ApprovalSystemOCT.processtype'),
        ),
        migrations.CreateModel(
            name='Finalize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fin_project_name', models.CharField(max_length=500, verbose_name='课题名称')),
                ('fin_project_type', models.CharField(max_length=255, verbose_name='课题类型')),
                ('fin_departments', models.JSONField(null=True, verbose_name='课题组成单位')),
                ('fin_groups', models.CharField(max_length=500, verbose_name='课题参与团队')),
                ('fin_start_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='开始时间')),
                ('fin_end_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='结束时间')),
                ('fin_funding_status', models.CharField(max_length=500, verbose_name='经费使用情况')),
                ('fin_project_achievement', models.CharField(max_length=500, verbose_name='课题结题成果')),
                ('fin_project_situation', models.TextField(help_text='包括研究的背景、过程、结果及问题等', verbose_name='课题完成情况')),
                ('fin_pre_audit', models.TextField(verbose_name='预检查情况')),
                ('fin_project_sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='课题负责人')),
            ],
        ),
    ]
